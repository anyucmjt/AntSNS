<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.antsns.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.antsns.entity.User" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="uname" property="uname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <association property="role" javaType="com.antsns.entity.Role">
    	<id column="rid" property="rid" jdbcType="INTEGER" />
    <result column="rname" property="rname" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    uid, uname, password, email, sex
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from as_user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from as_user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.antsns.entity.User" >
    insert into as_user (uid, uname, password, 
      email, sex)
    values (#{uid,jdbcType=INTEGER}, #{uname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.antsns.entity.User" >
    insert into as_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="uname != null" >
        uname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="sex != null" >
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="uname != null" >
        #{uname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.antsns.entity.User" >
    update as_user
    <set >
      <if test="uname != null" >
        uname = #{uname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.antsns.entity.User" >
    update as_user
    set uname = #{uname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <!-- 登录 -->
  <select id="login"  parameterType="com.antsns.entity.User" resultMap="BaseResultMap">
  SELECT
	r.rid,
	r.rname,
	u.uid,
	u.uname,
	u.PASSWORD
FROM
	as_user u,
	as_role r
where u.rid = r.rid 
and u.uname=#{uname} and u.password=#{password};
  </select>
  <!-- 根据名称查询 -->
  <select id="selectByName" parameterType="String" resultMap="BaseResultMap">
 select uid,uname,password,email,sex
from as_user 
where uname = #{uname}
  </select>
  <!-- 注册 -->
  <insert id="saveUser" parameterType="com.antsns.entity.User"  useGeneratedKeys="true" keyProperty="uid"> 
insert into as_user (uname,password,email,sex) 
VALUES (#{uname},#{password},#{email},#{sex})
  </insert>
  <!-- 查询所有 -->
  <select id="finAll" parameterType="com.antsns.entity.User" resultMap="BaseResultMap">
  select * from as_user;
  </select>
</mapper>